apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kubernetes-dashboard.fullname" . }}
  labels:
    app: {{ template "kubernetes-dashboard.name" . }}
    chart: {{ template "kubernetes-dashboard.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    kubernetes.io/cluster-service: "true"
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "kubernetes-dashboard.name" . }}
        release: {{ .Release.Name }}
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: {{ template "kubernetes-dashboard.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if or .Values.service.useHttps .Values.extraArgs }}
        args:
{{- if .Values.service.useHttps }}
          - --auto-generate-certificates
{{ end }}
{{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 10 }}
{{- end }}
{{- end }}
        ports:
        - name: http{{ if .Values.service.useHttps }}s{{ end }}
          containerPort: {{ if .Values.service.useHttps }}8443{{ else }}9090{{ end }}
          protocol: TCP
        {{- if .Values.service.useHttps }}
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        {{ end }}
        livenessProbe:
          httpGet:
            scheme: HTTP{{ if .Values.service.useHttps }}S{{ end }}
            path: /
            port: {{ if .Values.service.useHttps }}8443{{ else }}9090{{ end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.service.useHttps }}
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: {{ template "kubernetes-dashboard.fullname" . }}
      - name: tmp-volume
        emptyDir: {}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
